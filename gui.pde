/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void blue_change(GSlider source, GEvent event) { //_CODE_:blue_slider:503038:
  blueValue = int(source.getValueF() * 255);
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:blue_slider:503038:

public void green_change(GSlider source, GEvent event) { //_CODE_:green_slider:856539:
  greenValue = int(source.getValueF() * 255);
  println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:green_slider:856539:

public void red_change(GSlider source, GEvent event) { //_CODE_:red_slider:200590:
  redValue = int(source.getValueF() * 255);
  println("slider3 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:red_slider:200590:

public void pos_change(GSlider2D source, GEvent event) { //_CODE_:pos_slider:813612:
  translate.data[0][1] = source.getValueXF();
  translate.data[0][2] = source.getValueYF();
  println("slider2d1 - GSlider2D >> GEvent." + event + " @ " + millis());
} //_CODE_:pos_slider:813612:

public void zoom_change(GSlider source, GEvent event) { //_CODE_:zoom_slider:412975:
  zoom = source.getValueF();
  println("slider4 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:zoom_slider:412975:

public void yaw_change(GSlider source, GEvent event) { //_CODE_:yaw_slider:707459:
  yaw = source.getValueF();
  println("slider5 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:yaw_slider:707459:

public void pause_click(GButton source, GEvent event) { //_CODE_:pause_button:319142:
  pause = !pause;
  println("button5 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:pause_button:319142:

public void pitch_change(GSlider source, GEvent event) { //_CODE_:pitch_slider:252390:
  pitch = source.getValueF();
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:pitch_slider:252390:

public void height_change(GSlider source, GEvent event) { //_CODE_:height_slider:787319:
  translate.data[0][3] = source.getValueF();
  println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:height_slider:787319:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  label1 = new GLabel(this, 10, 10, 110, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Mesh Machine");
  label1.setOpaque(true);
  label3 = new GLabel(this, 30, 240, 70, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Color");
  label3.setOpaque(true);
  blue_slider = new GSlider(this, 120, 270, 90, 30, 10.0);
  blue_slider.setRotation(PI/2, GControlMode.CORNER);
  blue_slider.setLimits(0.5, 1.0, 0.0);
  blue_slider.setNumberFormat(G4P.DECIMAL, 2);
  blue_slider.setOpaque(false);
  blue_slider.addEventHandler(this, "blue_change");
  green_slider = new GSlider(this, 80, 270, 90, 30, 10.0);
  green_slider.setRotation(PI/2, GControlMode.CORNER);
  green_slider.setLimits(0.5, 1.0, 0.0);
  green_slider.setNumberFormat(G4P.DECIMAL, 2);
  green_slider.setOpaque(false);
  green_slider.addEventHandler(this, "green_change");
  red_slider = new GSlider(this, 40, 270, 90, 30, 10.0);
  red_slider.setRotation(PI/2, GControlMode.CORNER);
  red_slider.setLimits(0.5, 1.0, 0.0);
  red_slider.setNumberFormat(G4P.DECIMAL, 2);
  red_slider.setOpaque(false);
  red_slider.addEventHandler(this, "red_change");
  pos_slider = new GSlider2D(this, 10, 40, 110, 110);
  pos_slider.setLimitsX(0.0, -3.0, 3.0);
  pos_slider.setLimitsY(-3.0, -3.0, 3.0);
  pos_slider.setNumberFormat(G4P.DECIMAL, 2);
  pos_slider.setOpaque(true);
  pos_slider.addEventHandler(this, "pos_change");
  zoom_slider = new GSlider(this, 10, 200, 110, 30, 10.0);
  zoom_slider.setLimits(5.0, 3.0, 10.0);
  zoom_slider.setNumberFormat(G4P.DECIMAL, 2);
  zoom_slider.setOpaque(false);
  zoom_slider.addEventHandler(this, "zoom_change");
  yaw_slider = new GSlider(this, 10, 160, 110, 30, 10.0);
  yaw_slider.setLimits(0.0, -1.0, 1.0);
  yaw_slider.setNumberFormat(G4P.DECIMAL, 2);
  yaw_slider.setOpaque(false);
  yaw_slider.addEventHandler(this, "yaw_change");
  pause_button = new GButton(this, 130, 160, 30, 30);
  pause_button.setText("| |");
  pause_button.addEventHandler(this, "pause_click");
  pitch_slider = new GSlider(this, 160, 40, 110, 30, 10.0);
  pitch_slider.setRotation(PI/2, GControlMode.CORNER);
  pitch_slider.setLimits(0.5, 0.0, 1.0);
  pitch_slider.setNumberFormat(G4P.DECIMAL, 2);
  pitch_slider.setOpaque(false);
  pitch_slider.addEventHandler(this, "pitch_change");
  height_slider = new GSlider(this, 200, 40, 110, 30, 10.0);
  height_slider.setRotation(PI/2, GControlMode.CORNER);
  height_slider.setLimits(3.0, 3.0, -3.0);
  height_slider.setNumberFormat(G4P.DECIMAL, 2);
  height_slider.setOpaque(false);
  height_slider.addEventHandler(this, "height_change");
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GLabel label3; 
GSlider blue_slider; 
GSlider green_slider; 
GSlider red_slider; 
GSlider2D pos_slider; 
GSlider zoom_slider; 
GSlider yaw_slider; 
GButton pause_button; 
GSlider pitch_slider; 
GSlider height_slider; 
